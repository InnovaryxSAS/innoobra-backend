AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  lambda-java-users
  
  Sample SAM Template for lambda-java-users

Globals:
  Function:
    Timeout: 30
    MemorySize: 512
    Environment:
      Variables:
        PARAM1: VALUE

Resources:
  # Create User Function
  CreateUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: target/user-1.0-SNAPSHOT.jar
      Handler: com.lambdas.handler.CreateUserHandler::handleRequest
      Runtime: java21
      Architectures:
        - x86_64
      Events:
        CreateUser:
          Type: Api
          Properties:
            Path: /users
            Method: post
    Metadata:
      DockerImage: amazoncorretto:21-al2-jdk

  # Get All Users Function
  GetUsersFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: target/user-1.0-SNAPSHOT.jar
      Handler: com.lambdas.handler.GetUsersHandler::handleRequest
      Runtime: java21
      Architectures:
        - x86_64
      Events:
        GetUsers:
          Type: Api
          Properties:
            Path: /users
            Method: get
    Metadata:
      DockerImage: amazoncorretto:21-al2-jdk

  # Get User by ID Function
  GetUserByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: target/user-1.0-SNAPSHOT.jar
      Handler: com.lambdas.handler.GetUserByIdHandler::handleRequest
      Runtime: java21
      Architectures:
        - x86_64
      Events:
        GetUserById:
          Type: Api
          Properties:
            Path: /users/{id}
            Method: get
    Metadata:
      DockerImage: amazoncorretto:21-al2-jdk

  # Update User Function
  UpdateUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: target/user-1.0-SNAPSHOT.jar
      Handler: com.lambdas.handler.UpdateUserHandler::handleRequest
      Runtime: java21
      Architectures:
        - x86_64
      Events:
        UpdateUser:
          Type: Api
          Properties:
            Path: /users/{id}
            Method: put
    Metadata:
      DockerImage: amazoncorretto:21-al2-jdk

  # Delete User Function
  DeleteUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: target/user-1.0-SNAPSHOT.jar
      Handler: com.lambdas.handler.DeleteUserHandler::handleRequest
      Runtime: java21
      Architectures:
        - x86_64
      Events:
        DeleteUser:
          Type: Api
          Properties:
            Path: /users/{id}
            Method: delete
    Metadata:
      DockerImage: amazoncorretto:21-al2-jdk

Outputs:
  UserApi:
    Description: "API Gateway endpoint URL for user operations"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
    
  CreateUserFunction:
    Description: "Create User Lambda Function ARN"
    Value: !GetAtt CreateUserFunction.Arn
    
  GetUsersFunction:
    Description: "Get Users Lambda Function ARN"
    Value: !GetAtt GetUsersFunction.Arn
    
  GetUserByIdFunction:
    Description: "Get User by ID Lambda Function ARN"
    Value: !GetAtt GetUserByIdFunction.Arn
    
  UpdateUserFunction:
    Description: "Update User Lambda Function ARN"
    Value: !GetAtt UpdateUserFunction.Arn
    
  DeleteUserFunction:
    Description: "Delete User Lambda Function ARN"
    Value: !GetAtt DeleteUserFunction.Arn
